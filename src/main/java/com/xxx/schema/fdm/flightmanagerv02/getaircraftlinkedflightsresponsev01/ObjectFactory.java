//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.07.30 at 01:53:08 PM BST 
//


package com.xxx.schema.fdm.flightmanagerv02.getaircraftlinkedflightsresponsev01;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.ba.schema.fdm.flightmanagerv02.getaircraftlinkedflightsresponsev01 package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.ba.schema.fdm.flightmanagerv02.getaircraftlinkedflightsresponsev01
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link GetAircraftLinkedFlightsResponse }
     * 
     */
    public GetAircraftLinkedFlightsResponse createGetAircraftLinkedFlightsResponse() {
        return new GetAircraftLinkedFlightsResponse();
    }

    /**
     * Create an instance of {@link Flight }
     * 
     */
    public Flight createFlight() {
        return new Flight();
    }

    /**
     * Create an instance of {@link BusinessErrors }
     * 
     */
    public BusinessErrors createBusinessErrors() {
        return new BusinessErrors();
    }

    /**
     * Create an instance of {@link AircraftType }
     * 
     */
    public AircraftType createAircraftType() {
        return new AircraftType();
    }

    /**
     * Create an instance of {@link OperationalEvent }
     * 
     */
    public OperationalEvent createOperationalEvent() {
        return new OperationalEvent();
    }

    /**
     * Create an instance of {@link EventDate }
     * 
     */
    public EventDate createEventDate() {
        return new EventDate();
    }

    /**
     * Create an instance of {@link OperationalDepartureStatus }
     * 
     */
    public OperationalDepartureStatus createOperationalDepartureStatus() {
        return new OperationalDepartureStatus();
    }

    /**
     * Create an instance of {@link OperatingFlightNumber }
     * 
     */
    public OperatingFlightNumber createOperatingFlightNumber() {
        return new OperatingFlightNumber();
    }

    /**
     * Create an instance of {@link Aircraft }
     * 
     */
    public Aircraft createAircraft() {
        return new Aircraft();
    }

    /**
     * Create an instance of {@link SubError }
     * 
     */
    public SubError createSubError() {
        return new SubError();
    }

    /**
     * Create an instance of {@link Delay }
     * 
     */
    public Delay createDelay() {
        return new Delay();
    }

    /**
     * Create an instance of {@link Duration }
     * 
     */
    public Duration createDuration() {
        return new Duration();
    }

    /**
     * Create an instance of {@link Commentary }
     * 
     */
    public Commentary createCommentary() {
        return new Commentary();
    }

    /**
     * Create an instance of {@link Gate }
     * 
     */
    public Gate createGate() {
        return new Gate();
    }

    /**
     * Create an instance of {@link CustomerNotification }
     * 
     */
    public CustomerNotification createCustomerNotification() {
        return new CustomerNotification();
    }

    /**
     * Create an instance of {@link MarketingFlightNumber }
     * 
     */
    public MarketingFlightNumber createMarketingFlightNumber() {
        return new MarketingFlightNumber();
    }

    /**
     * Create an instance of {@link FlightLegForAircraft }
     * 
     */
    public FlightLegForAircraft createFlightLegForAircraft() {
        return new FlightLegForAircraft();
    }

    /**
     * Create an instance of {@link OperationalArrivalStatus }
     * 
     */
    public OperationalArrivalStatus createOperationalArrivalStatus() {
        return new OperationalArrivalStatus();
    }

    /**
     * Create an instance of {@link LegStatus }
     * 
     */
    public LegStatus createLegStatus() {
        return new LegStatus();
    }

    /**
     * Create an instance of {@link Organisation }
     * 
     */
    public Organisation createOrganisation() {
        return new Organisation();
    }

    /**
     * Create an instance of {@link Location }
     * 
     */
    public Location createLocation() {
        return new Location();
    }

    /**
     * Create an instance of {@link Movement }
     * 
     */
    public Movement createMovement() {
        return new Movement();
    }

    /**
     * Create an instance of {@link City }
     * 
     */
    public City createCity() {
        return new City();
    }

    /**
     * Create an instance of {@link FlightTimings }
     * 
     */
    public FlightTimings createFlightTimings() {
        return new FlightTimings();
    }

    /**
     * Create an instance of {@link Airport }
     * 
     */
    public Airport createAirport() {
        return new Airport();
    }

    /**
     * Create an instance of {@link BusinessError }
     * 
     */
    public BusinessError createBusinessError() {
        return new BusinessError();
    }

    /**
     * Create an instance of {@link FlightNumber }
     * 
     */
    public FlightNumber createFlightNumber() {
        return new FlightNumber();
    }

    /**
     * Create an instance of {@link FlightLeg }
     * 
     */
    public FlightLeg createFlightLeg() {
        return new FlightLeg();
    }

    /**
     * Create an instance of {@link AircraftForFlightLeg }
     * 
     */
    public AircraftForFlightLeg createAircraftForFlightLeg() {
        return new AircraftForFlightLeg();
    }

}
